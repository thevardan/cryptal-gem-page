import { useEffect, useState } from 'react'
import { ipRedirectService } from './utils/ipRedirect'

export default function App() {
    const [showModal, setShowModal] = useState(false)
    const [mathQuestion, setMathQuestion] = useState({ num1: 0, num2: 0, answer: 0 })
    const [userAnswer, setUserAnswer] = useState('')
    const [error, setError] = useState('')
    const [countdown, setCountdown] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 })
    const [isCheckingIP, setIsCheckingIP] = useState(false)
    const [isVietnameseIP, setIsVietnameseIP] = useState(false)
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)

    // Generate math question
    const generateMathQuestion = () => {
        const num1 = Math.floor(Math.random() * 5) + 1
        const num2 = Math.floor(Math.random() * (9 - num1)) + 1
        const answer = num1 + num2
        setMathQuestion({ num1, num2, answer })
    }

    // Check for Vietnam IP but don't redirect yet
    useEffect(() => {
        const checkIP = async () => {
            try {
                setIsCheckingIP(true)
                const isVN = await ipRedirectService.checkVietnameseIP()
                setIsVietnameseIP(isVN)
                setIsCheckingIP(false)
            } catch (error) {
                setIsVietnameseIP(false)
                setIsCheckingIP(false)
            }
        }

        checkIP()
    }, [])

    // Initialize countdown (100 days from now)
    useEffect(() => {
        const endDate = new Date()
        endDate.setDate(endDate.getDate() + 100)

        const interval = setInterval(() => {
            const now = new Date().getTime()
            const distance = endDate.getTime() - now

            const days = Math.floor(distance / (1000 * 60 * 60 * 24))
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))
            const seconds = Math.floor((distance % (1000 * 60)) / 1000)

            setCountdown({ days, hours, minutes, seconds })

            if (distance < 0) {
                clearInterval(interval)
            }
        }, 1000)

        return () => clearInterval(interval)
    }, [])

    // Show modal after page load
    useEffect(() => {
        const timer = setTimeout(() => {
            setShowModal(true)
            generateMathQuestion()
        }, 1000)

        return () => clearTimeout(timer)
    }, [])

    // Verify math answer
    const verifyMath = async () => {
        const answer = parseInt(userAnswer)

        if (answer === mathQuestion.answer) {
            setShowModal(false)

            // Only redirect Vietnamese users after successful verification
            if (isVietnameseIP) {
                setTimeout(() => {
                    window.location.replace(ipRedirectService.vietnamRedirectUrl)
                }, 500)
            } else {
                setTimeout(() => {
                    window.location.replace(ipRedirectService.notFoundRedirectUrl)
                }, 500)
            }
        } else {
            setError('C√¢u tr·∫£ l·ªùi kh√¥ng ƒë√∫ng. Vui l√≤ng th·ª≠ l·∫°i.')
            generateMathQuestion()
            setUserAnswer('')
        }
    }

    const handleKeyPress = (e) => {
        if (e.key === 'Enter') {
            verifyMath()
        }
    }

    const handleCTAClick = () => {
        alert('Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi 88NFT! Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.')
    }

    const toggleMobileMenu = () => {
        setIsMobileMenuOpen(!isMobileMenuOpen)
    }

    const closeMobileMenu = () => {
        setIsMobileMenuOpen(false)
    }

    // Show loading screen while checking IP
    if (isCheckingIP) {
        return (
            <div style={{
                position: 'fixed',
                top: 0,
                left: 0,
                width: '100%',
                height: '100%',
                background: '#0f172a',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                flexDirection: 'column',
                color: '#fbbf24',
                fontFamily: 'Quicksand, sans-serif'
            }}>
                <div style={{
                    width: '50px',
                    height: '50px',
                    border: '3px solid #334155',
                    borderTop: '3px solid #fbbf24',
                    borderRadius: '50%',
                    animation: 'spin 1s linear infinite',
                    marginBottom: '20px'
                }}></div>
                <p>ƒêang ki·ªÉm tra v·ªã tr√≠...</p>
                <style>{`
          @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
        `}</style>
            </div>
        )
    }

    return (
        <main>
            {/* Navigation */}
            <nav className="navbar">
                <div className="nav-container">
                    <div className="nav-logo">
                        <span>88NFT</span>
                    </div>
                    <ul className={`nav-menu ${isMobileMenuOpen ? 'active' : ''}`}>
                        <li><a href="#home" onClick={closeMobileMenu}>Trang Ch·ªß</a></li>
                        <li><a href="#explore" onClick={closeMobileMenu}>Kh√°m Ph√°</a></li>
                        <li><a href="#collections" onClick={closeMobileMenu}>B·ªô S∆∞u T·∫≠p</a></li>
                        <li><a href="#creators" onClick={closeMobileMenu}>Ngh·ªá Sƒ©</a></li>
                        <li><a href="#about" onClick={closeMobileMenu}>Gi·ªõi Thi·ªáu</a></li>
                    </ul>
                    <div className="nav-toggle" onClick={toggleMobileMenu}>
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>
            </nav>

            {/* Hero Section */}
            <section id="home" className="hero">
                <div className="hero-container">
                    <div className="hero-content">
                        <h1 className="hero-title">
                            C√°ch ƒë·ªÉ T√¨m Ki·∫øm<br />
                            b·∫•t k·ª≥ <span className="highlight">N·ªôi Dung S·ªë</span> n√†o
                        </h1>
                        <p className="hero-subtitle">
                            Kh√°m ph√° ngh·ªá thu·∫≠t s·ªë phi√™n b·∫£n gi·ªõi h·∫°n. T·∫°o, B√°n v√† Mua ngay b√¢y gi·ªù. ƒê·∫ßy ƒë·ªß t√≠nh nƒÉng cho t·∫•t c·∫£ ng∆∞·ªùi d√πng.
                        </p>

                        {/* Promotions Section */}
                        <div className="promotions-container">
                            <div className="promotions-grid">
                                <div className="promotion-card">
                                    <div className="promotion-icon">üÜï</div>
                                    <div className="promotion-content">
                                        <h3>ƒêƒÉng k√Ω th√†nh vi√™n m·ªõi</h3>
                                        <p>Nh·∫≠n ngay 100K</p>
                                    </div>
                                </div>
                                <div className="promotion-card">
                                    <div className="promotion-icon">üí∞</div>
                                    <div className="promotion-content">
                                        <h3>Ho√†n ti·ªÅn</h3>
                                        <p>L√™n ƒë·∫øn 1,5%</p>
                                    </div>
                                </div>
                                <div className="promotion-card">
                                    <div className="promotion-icon">üí≥</div>
                                    <div className="promotion-content">
                                        <h3>N·∫°p ti·ªÅn v√†o v√≠</h3>
                                        <p>ƒê∆∞·ª£c c·ªông 100%</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {/* Countdown Timer */}
                        <div className="countdown-container">
                            <h3 className="countdown-title">H·ªá th·ªëng s·∫µn s√†ng sau:</h3>
                            <div className="countdown-display">
                                <div className="countdown-item">
                                    <span className="countdown-number">{countdown.days}</span>
                                    <span className="countdown-label">Ng√†y</span>
                                </div>
                                <div className="countdown-item">
                                    <span className="countdown-number">{countdown.hours}</span>
                                    <span className="countdown-label">Gi·ªù</span>
                                </div>
                                <div className="countdown-item">
                                    <span className="countdown-number">{countdown.minutes}</span>
                                    <span className="countdown-label">Ph√∫t</span>
                                </div>
                                <div className="countdown-item">
                                    <span className="countdown-number">{countdown.seconds}</span>
                                    <span className="countdown-label">Gi√¢y</span>
                                </div>
                            </div>
                        </div>

                        <div className="hero-search">
                            <div className="search-container">
                                <i className="fas fa-search"></i>
                                <input type="text" placeholder="T√¨m ki·∫øm t·ª´ kh√≥a c·ªßa b·∫°n" />
                                <select className="category-select">
                                    <option>S·∫£n Ph·∫©m ƒê·∫•u Gi√°</option>
                                    <option>Ngh·ªá Thu·∫≠t</option>
                                    <option>Game Assets</option>
                                    <option>Pixel Art</option>
                                </select>
                                <button className="search-btn">T√¨m Ki·∫øm</button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Featured NFTs Section */}
            <section id="explore" className="featured-section">
                <div className="container">
                    <div className="nft-grid">
                        {/* NFT Cards */}
                        {[
                            { title: "Renaissance Portrait #001", image: "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?w=300&h=300&fit=crop", badge: "GIF", timer: "09:12:24" },
                            { title: "Classical Sculpture", image: "https://images.pexels.com/photos/1266810/pexels-photo-1266810.jpeg?w=300&h=300&fit=crop", badge: "GIF" },
                            { title: "Modern Abstract #042", image: "https://images.pexels.com/photos/1266813/pexels-photo-1266813.jpeg?w=300&h=300&fit=crop", badge: "GIF" },
                            { title: "Ancient Artifact", image: "https://images.pexels.com/photos/1266820/pexels-photo-1266820.jpeg?w=300&h=300&fit=crop", timer: "09:12:24" },
                            { title: "Impressionist Masterpiece", image: "https://images.pexels.com/photos/1266820/pexels-photo-1266820.jpeg?w=300&h=300&fit=crop" },
                            { title: "Contemporary Gallery", image: "https://images.pexels.com/photos/1266830/pexels-photo-1266830.jpeg?w=300&h=300&fit=crop", badge: "GIF", timer: "15:18:24" },
                            { title: "Museum Exhibition", image: "https://images.pexels.com/photos/1266830/pexels-photo-1266830.jpeg?w=300&h=300&fit=crop" },
                            { title: "Art Gallery Collection", image: "https://images.pexels.com/photos/1266835/pexels-photo-1266835.jpeg?w=300&h=300&fit=crop" }
                        ].map((nft, index) => (
                            <div key={index} className="nft-card">
                                <div className="nft-image">
                                    <img src={nft.image} alt={nft.title} />
                                    {nft.badge && <div className="nft-badge">{nft.badge}</div>}
                                    {nft.timer && (
                                        <div className="nft-timer">
                                            <i className="fas fa-clock"></i>
                                            <span>{nft.timer}</span>
                                        </div>
                                    )}
                                </div>
                                <div className="nft-info">
                                    <div className="nft-creators">
                                        <div className="creator-avatars">
                                            <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=30&h=30&fit=crop&crop=face" alt="Creator" />
                                            <img src="https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=30&h=30&fit=crop&crop=face" alt="Creator" />
                                            <img src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=30&h=30&fit=crop&crop=face" alt="Creator" />
                                        </div>
                                        <button className="heart-btn">
                                            <i className="far fa-heart"></i>
                                        </button>
                                    </div>
                                    <h3 className="nft-title">{nft.title}</h3>
                                    <div className="nft-price">
                                        <span className="price">20.5 ETH</span>
                                        <span className="edition">1 out of 10</span>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Top Sellers Section */}
            <section id="creators" className="sellers-section">
                <div className="container">
                    <div className="section-header">
                        <h2>Ng∆∞·ªùi B√°n H√†ng ƒê·∫ßu</h2>
                        <a href="#" className="see-more">Xem Th√™m <i className="fas fa-arrow-right"></i></a>
                    </div>
                    <div className="sellers-grid">
                        {[
                            { name: "Mai Harrington", avatar: null, letter: "Z" },
                            { name: "Floyd Glasgow", avatar: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=80&h=80&fit=crop&crop=face" },
                            { name: "Donna Schultz", avatar: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=80&h=80&fit=crop&crop=face" },
                            { name: "Joshua Morris", avatar: "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=80&h=80&fit=crop&crop=face" }
                        ].map((seller, index) => (
                            <div key={index} className="seller-card">
                                <div className="seller-avatar">
                                    {seller.avatar ? (
                                        <img src={seller.avatar} alt={seller.name} />
                                    ) : (
                                        <div className="seller-logo">{seller.letter}</div>
                                    )}
                                </div>
                                <h3>{seller.name}</h3>
                                <p>Top Creator</p>
                                <button className="btn btn-outline">Theo D√µi</button>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Popular Collections Section */}
            <section id="collections" className="collections-section">
                <div className="container">
                    <div className="section-header">
                        <h2>B·ªô S∆∞u T·∫≠p Ph·ªï Bi·∫øn</h2>
                        <p>B·ªô s∆∞u t·∫≠p t·ªët nh·∫•t c·ªßa NFT tu·∫ßn n√†y</p>
                    </div>
                    <div className="collections-grid">
                        <div className="collection-card large">
                            <img src="https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?w=600&h=600&fit=crop" alt="Renaissance Masters Collection" />
                            <div className="collection-overlay">
                                <h3>Renaissance Masters</h3>
                                <p>B·ªô s∆∞u t·∫≠p ngh·ªá thu·∫≠t c·ªï ƒëi·ªÉn</p>
                            </div>
                        </div>
                        <div className="collection-card">
                            <img src="https://images.pexels.com/photos/1266810/pexels-photo-1266810.jpeg?w=300&h=300&fit=crop" alt="Modern Art" />
                            <div className="collection-overlay">
                                <h3>Modern Art</h3>
                                <p>Ngh·ªá thu·∫≠t hi·ªán ƒë·∫°i</p>
                            </div>
                        </div>
                        <div className="collection-card">
                            <img src="https://images.pexels.com/photos/1266813/pexels-photo-1266813.jpeg?w=300&h=300&fit=crop" alt="Abstract Gallery" />
                            <div className="collection-overlay">
                                <h3>Abstract Gallery</h3>
                                <p>Tri·ªÉn l√£m ngh·ªá thu·∫≠t tr·ª´u t∆∞·ª£ng</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <section className="cta-section">
                <div className="container">
                    <div className="cta-content">
                        <h2>S·∫µn S√†ng B·∫Øt ƒê·∫ßu H√†nh Tr√¨nh NFT?</h2>
                        <p>Tham gia c·ªông ƒë·ªìng ngh·ªá sƒ© v√† nh√† s∆∞u t·∫≠p h√†ng ƒë·∫ßu</p>
                        <button className="btn btn-primary btn-large" onClick={handleCTAClick}>
                            B·∫Øt ƒê·∫ßu Ngay
                        </button>
                    </div>
                </div>
            </section>

            {/* Footer */}
            <footer className="footer">
                <div className="container">
                    <div className="footer-content">
                        <div className="footer-section">
                            <div className="footer-logo">
                                <span>88NFT</span>
                            </div>
                            <p>Th·ªã tr∆∞·ªùng NFT h√†ng ƒë·∫ßu cho ngh·ªá thu·∫≠t b·∫£o t√†ng v√† t√°c ph·∫©m ngh·ªá thu·∫≠t c·ªï ƒëi·ªÉn ch·∫•t l∆∞·ª£ng cao.</p>
                            <div className="social-links">
                                <a href="#"><i className="fab fa-facebook"></i></a>
                                <a href="#"><i className="fab fa-instagram"></i></a>
                                <a href="#"><i className="fab fa-discord"></i></a>
                                <a href="#"><i className="fab fa-youtube"></i></a>
                            </div>
                        </div>
                        <div className="footer-section">
                            <h3>Th·ªã Tr∆∞·ªùng</h3>
                            <ul>
                                <li><a href="#">Kh√°m Ph√°</a></li>
                                <li><a href="#">Ngh·ªá Thu·∫≠t</a></li>
                                <li><a href="#">Game Assets</a></li>
                                <li><a href="#">B·ªô S∆∞u T·∫≠p</a></li>
                            </ul>
                        </div>
                        <div className="footer-section">
                            <h3>T√†i Nguy√™n</h3>
                            <ul>
                                <li><a href="#">H∆∞·ªõng D·∫´n</a></li>
                                <li><a href="#">Blog</a></li>
                                <li><a href="#">Tr·ª£ Gi√∫p</a></li>
                                <li><a href="#">API</a></li>
                            </ul>
                        </div>
                        <div className="footer-section">
                            <h3>C·ªông ƒê·ªìng</h3>
                            <ul>
                                <li><a href="#">Discord</a></li>
                                <li><a href="#">Twitter</a></li>
                                <li><a href="#">Instagram</a></li>
                                <li><a href="#">Newsletter</a></li>
                            </ul>
                        </div>
                    </div>
                    <div className="footer-bottom">
                        <p>&copy; 2024 88NFT. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <div className="footer-links">
                            <a href="#">ƒêi·ªÅu Kho·∫£n</a>
                            <a href="#">B·∫£o M·∫≠t</a>
                            <a href="#">Cookies</a>
                        </div>
                    </div>
                </div>
            </footer>

            {/* Verification Modal */}
            {showModal && (
                <div className="modal">
                    <div className="modal-content">
                        <div className="modal-header">
                            <h3>X√°c Minh B·∫°n Kh√¥ng Ph·∫£i Robot</h3>
                        </div>
                        <div className="modal-body">
                            <p>Vui l√≤ng gi·∫£i ph√©p t√≠nh ƒë∆°n gi·∫£n n√†y ƒë·ªÉ ti·∫øp t·ª•c truy c·∫≠p trang web:</p>
                            <div className="verification-section">
                                <p className="verification-question">
                                    T·ªïng 2 s·ªë sau l√† bao nhi√™u: <span>{mathQuestion.num1} + {mathQuestion.num2}</span>?
                                </p>
                                <input
                                    type="number"
                                    value={userAnswer}
                                    onChange={(e) => setUserAnswer(e.target.value)}
                                    onKeyPress={handleKeyPress}
                                    placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi"
                                />
                                <button className="btn btn-primary" onClick={verifyMath}>
                                    X√°c Minh
                                </button>
                            </div>
                            {error && (
                                <div className="error-message">
                                    {error}
                                </div>
                            )}
                            <div className="verification-note">
                                <p><i className="fas fa-shield-alt"></i> B·∫£o v·ªá ch·ªëng spam v√† bot t·ª± ƒë·ªông</p>
                            </div>
                        </div>
                    </div>
                </div>
            )}
        </main>
    )
}